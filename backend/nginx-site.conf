# Configuração Nginx para o backend NFe
# Salvar em: /etc/nginx/sites-available/nexo-backend

server {
    listen 80;
    server_name localhost;
    root /root/nexo/nexo-pedidos;
    index index.html index.php;
    
    # Logs
    access_log /var/log/nginx/nexo-backend_access.log;
    error_log /var/log/nginx/nexo-backend_error.log;
    
    # Headers de segurança
    add_header X-Content-Type-Options nosniff;
    add_header X-Frame-Options DENY;
    add_header X-XSS-Protection "1; mode=block";
    
    # CORS (ajustar para produção)
    add_header Access-Control-Allow-Origin "*";
    add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
    add_header Access-Control-Allow-Headers "Content-Type, Authorization";
    
    # Handle preflight requests
    location / {
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "*";
            add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
            add_header Access-Control-Allow-Headers "Content-Type, Authorization";
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            return 200;
        }
        
        # Servir frontend (React)
        try_files $uri $uri/ /index.html;
    }
    
    # Backend PHP
    location /backend/public/ {
        alias /root/nexo/nexo-pedidos/backend/public/;
        index index.php;

        location ~ \.php$ {
            fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;
            fastcgi_index index.php;
            fastcgi_param SCRIPT_FILENAME $request_filename;
            include fastcgi_params;
        }
        
        # Negar acesso a arquivos sensíveis
        location ~ \.(pfx|p12|key|pem|json)$ {
            deny all;
            return 403;
        }
    }
    
    # Servir arquivos estáticos do storage (XMLs e PDFs)
    location /storage/ {
        alias /root/nexo/nexo-pedidos/backend/storage/;
        
        # Permitir apenas XMLs e PDFs
        location ~* \.(xml|pdf)$ {
            expires 1h;
            add_header Cache-Control "public, max-age=3600";
            try_files $uri =404;
        }
        
        # Negar acesso a certificados
        location /storage/certificados/ {
            deny all;
            return 403;
        }
        
        # Negar outros tipos de arquivo
        location ~ \.(pfx|p12|key|pem|json)$ {
            deny all;
            return 403;
        }
    }
    
    # Otimizações
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
    
    # Limitar tamanho de upload
    client_max_body_size 10M;
}

# HTTPS (Let's Encrypt) - Configurar depois
# server {
#     listen 443 ssl http2;
#     server_name localhost;
#
#     # SSL configurado pelo Certbot
#     # ssl_certificate /etc/letsencrypt/live/localhost/fullchain.pem;
#     # ssl_certificate_key /etc/letsencrypt/live/localhost/privkey.pem;
#
#     # Mesma configuração do HTTP acima...
# }
