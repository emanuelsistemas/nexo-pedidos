# Redirecionamento HTTP para HTTPS (BETA)
server {
    listen 80;
    listen [::]:80;
    server_name nexobeta.emasoftware.app;

    # Permitir acesso ao .well-known para validação do Let's Encrypt
    location /.well-known/acme-challenge/ {
        root /var/www/html;
    }

    # Redirecionar todo o resto para HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# Configuração HTTPS BETA
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name nexobeta.emasoftware.app;

    # Certificados SSL (serão configurados pelo Certbot)
    ssl_certificate /etc/letsencrypt/live/nexobeta.emasoftware.app/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/nexobeta.emasoftware.app/privkey.pem;

    # Configurações SSL modernas
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Configurações de segurança
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
    
    # Root directory for BETA
    root /var/www/nexo-beta;
    index index.html index.htm;
    
    # Logs específicos para BETA
    access_log /var/log/nginx/nexo-beta-access.log;
    error_log /var/log/nginx/nexo-beta-error.log;
    
    # Frontend - Arquivos estáticos do React
    location / {
        try_files $uri $uri/ /index.html;

        # Cache para arquivos estáticos
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            access_log off;
        }

        # Sem cache para HTML
        location ~* \.html$ {
            expires -1;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
        }
    }
    
    # Backend - API PHP
    location /backend/ {
        root /root/nexo-pedidos;
        try_files $uri $uri/ =404;

        # Processar arquivos PHP
        location ~ \.php$ {
            fastcgi_pass unix:/var/run/php/php8.3-fpm.sock;
            fastcgi_index index.php;
            include fastcgi_params;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_param PATH_INFO $fastcgi_path_info;

            # Timeouts para NFe (pode demorar)
            fastcgi_read_timeout 300;
            fastcgi_send_timeout 300;
        }

        # Bloquear acesso a arquivos sensíveis
        location ~ /\. {
            deny all;
        }

        location ~ /(vendor|storage|config)/ {
            deny all;
        }
    }
    
    # Configurações de upload (para certificados)
    client_max_body_size 10M;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json;
}
