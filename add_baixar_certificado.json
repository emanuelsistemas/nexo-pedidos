{
  "command": "cat >> /var/www/nfe-api/src/Services/SupabaseService.php << 'CERT_EOF'\n    \n    /**\n     * Baixar certificado digital do Supabase Storage\n     */\n    public function baixarCertificado($certificadoPath)\n    {\n        try {\n            error_log(\"Baixando certificado: \" . $certificadoPath);\n            \n            $url = $this->supabaseUrl . '/storage/v1/object/certificadodigital/' . $certificadoPath;\n            \n            $headers = [\n                'Authorization: Bearer ' . $this->supabaseKey\n            ];\n            \n            $ch = curl_init();\n            \n            curl_setopt_array($ch, [\n                CURLOPT_URL => $url,\n                CURLOPT_RETURNTRANSFER => true,\n                CURLOPT_HTTPHEADER => $headers,\n                CURLOPT_TIMEOUT => 30,\n                CURLOPT_FOLLOWLOCATION => true\n            ]);\n            \n            $response = curl_exec($ch);\n            $httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);\n            $error = curl_error($ch);\n            \n            curl_close($ch);\n            \n            if ($error) {\n                throw new Exception('Erro cURL ao baixar certificado: ' . $error);\n            }\n            \n            if ($httpCode !== 200) {\n                throw new Exception('Erro HTTP ao baixar certificado: ' . $httpCode);\n            }\n            \n            if (empty($response)) {\n                throw new Exception('Certificado vazio ou nÃ£o encontrado');\n            }\n            \n            error_log(\"Certificado baixado com sucesso - Tamanho: \" . strlen($response) . \" bytes\");\n            \n            return $response;\n            \n        } catch (Exception $e) {\n            error_log(\"ERRO ao baixar certificado: \" . $e->getMessage());\n            throw $e;\n        }\n    }\nCERT_EOF"
}
